12:35:44.114 Running build in Washington, D.C., USA (East) â€“ iad1
12:35:44.115 Build machine configuration: 2 cores, 8 GB
12:35:44.136 Cloning github.com/stevensoneremeh/eriggalive (Branch: new, Commit: 36bfce6)
12:35:46.253 Cloning completed: 2.117s
12:35:47.433 Restored build cache from previous deployment (AnzKA7BGHp1WGhor9w2Z4tw5qqjK)
12:35:49.475 Running "vercel build"
12:35:50.019 Vercel CLI 48.2.9
12:35:50.728 Detected `pnpm-lock.yaml` 9 which may be generated by pnpm@9.x or pnpm@10.x
12:35:50.730 Using pnpm@10.x based on project creation date
12:35:50.730 To use pnpm@9.x, manually opt in using corepack (https://vercel.com/docs/deployments/configure-a-build#corepack)
12:35:50.786 Installing dependencies...
12:35:51.839 Lockfile is up to date, resolution step is skipped
12:35:54.052 Progress: resolved 1, reused 0, downloaded 0, added 0
12:35:54.367 Packages: +279 -217
12:35:54.367 +++++++++++++++++++++++++++++++++++++++++++++-----------------------------------
12:35:55.052 Progress: resolved 279, reused 0, downloaded 14, added 0
12:35:56.054 Progress: resolved 279, reused 0, downloaded 78, added 24
12:35:57.055 Progress: resolved 279, reused 0, downloaded 105, added 32
12:35:58.154 Progress: resolved 279, reused 0, downloaded 106, added 32
12:35:59.156 Progress: resolved 279, reused 0, downloaded 171, added 53
12:36:00.157 Progress: resolved 279, reused 0, downloaded 196, added 61
12:36:01.158 Progress: resolved 279, reused 0, downloaded 212, added 65
12:36:02.159 Progress: resolved 279, reused 0, downloaded 234, added 75
12:36:03.159 Progress: resolved 279, reused 0, downloaded 261, added 83
12:36:04.160 Progress: resolved 279, reused 0, downloaded 279, added 105
12:36:05.161 Progress: resolved 279, reused 0, downloaded 279, added 112
12:36:06.161 Progress: resolved 279, reused 0, downloaded 279, added 116
12:36:07.162 Progress: resolved 279, reused 0, downloaded 279, added 171
12:36:08.163 Progress: resolved 279, reused 0, downloaded 279, added 185
12:36:09.164 Progress: resolved 279, reused 0, downloaded 279, added 212
12:36:10.164 Progress: resolved 279, reused 0, downloaded 279, added 256
12:36:11.042 Progress: resolved 279, reused 0, downloaded 279, added 279, done
12:36:12.820 
12:36:12.822 dependencies:
12:36:12.822 + @neondatabase/serverless 1.0.2
12:36:12.823 - @supabase/supabase-js 2.58.0
12:36:12.823 + @supabase/supabase-js 2.75.0
12:36:12.823 - @tiptap/core 3.6.5
12:36:12.825 + @tiptap/core 3.6.6
12:36:12.826 - @tiptap/extension-link 3.6.5
12:36:12.826 + @tiptap/extension-link 3.6.6
12:36:12.826 - @tiptap/extension-mention 3.6.5
12:36:12.826 + @tiptap/extension-mention 3.6.6
12:36:12.826 - @tiptap/extension-placeholder 3.6.5
12:36:12.826 + @tiptap/extension-placeholder 3.6.6
12:36:12.826 - @tiptap/extensions 3.6.5
12:36:12.826 + @tiptap/extensions 3.6.6
12:36:12.827 - @tiptap/pm 3.6.5
12:36:12.827 + @tiptap/pm 3.6.6
12:36:12.827 - @tiptap/react 3.6.5
12:36:12.827 + @tiptap/react 3.6.6
12:36:12.827 - @tiptap/starter-kit 3.6.5
12:36:12.827 + @tiptap/starter-kit 3.6.6
12:36:12.827 - @tiptap/suggestion 3.6.5
12:36:12.827 + @tiptap/suggestion 3.6.6
12:36:12.827 - @types/node 20.19.19
12:36:12.827 + @types/node 20.19.21
12:36:12.827 + @types/qrcode 1.5.5
12:36:12.828 - @types/react 18.2.20
12:36:12.828 + @types/react 18.3.26
12:36:12.828 - @types/react-dom 18.2.7
12:36:12.828 + @types/react-dom 18.3.7
12:36:12.828 - autoprefixer 10.4.15
12:36:12.828 + autoprefixer 10.4.21
12:36:12.828 - expo 54.0.12
12:36:12.828 + expo 54.0.13
12:36:12.828 - expo-file-system 19.0.16
12:36:12.828 + expo-file-system 19.0.17
12:36:12.828 - framer-motion 12.23.22
12:36:12.828 + framer-motion 12.23.24
12:36:12.828 + qrcode 1.5.4
12:36:12.828 - react-day-picker 9.11.0
12:36:12.829 + react-day-picker 9.11.1
12:36:12.829 - react-hook-form 7.64.0
12:36:12.829 + react-hook-form 7.65.0
12:36:12.829 - typescript 5.1.6
12:36:12.829 + typescript 5.9.3
12:36:12.829 
12:36:12.829 â•­ Warning â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
12:36:12.829 â”‚                                                                              â”‚
12:36:12.829 â”‚   Ignored build scripts: unrs-resolver.                                      â”‚
12:36:12.829 â”‚   Run "pnpm approve-builds" to pick which dependencies should be allowed     â”‚
12:36:12.830 â”‚   to run scripts.                                                            â”‚
12:36:12.837 â”‚                                                                              â”‚
12:36:12.837 â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
12:36:12.837 
12:36:12.886 Done in 21.9s using pnpm v10.18.2
12:36:12.920 Detected Next.js version: 14.2.16
12:36:13.050 Running "pnpm run build"
12:36:13.434 
12:36:13.434 > erigga-fan-platform@0.1.0 build /vercel/path0
12:36:13.434 > next build
12:36:13.435 
12:36:14.348   â–² Next.js 14.2.16
12:36:14.349   - Experiments (use with caution):
12:36:14.349     Â· missingSuspenseWithCSRBailout
12:36:14.350 
12:36:14.436    Creating an optimized production build ...
12:36:58.406 <w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (118kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
12:36:58.498 Failed to compile.
12:36:58.498 
12:36:58.499 ./app/api/coins/balance/route.ts
12:36:58.499 Error: 
12:36:58.499   [31mx[0m the name `GET` is defined multiple times
12:36:58.500     ,-[[36;1;4m/vercel/path0/app/api/coins/balance/route.ts[0m:4:1]
12:36:58.500  [2m 4[0m | export const revalidate = 0
12:36:58.500  [2m 5[0m | 
12:36:58.500  [2m 6[0m | // This route is intentionally minimal - add your implementation here
12:36:58.500  [2m 7[0m | export async function GET() {
12:36:58.501     : [31;1m                      ^|^[0m
12:36:58.501     :                        [31;1m`-- [31;1mprevious definition of `GET` here[0m[0m
12:36:58.501  [2m 8[0m |   return NextResponse.json({ error: "Not implemented" }, { status: 501 })
12:36:58.501  [2m 9[0m | }
12:36:58.501  [2m10[0m | 
12:36:58.501  [2m11[0m | function verifyUser(request: NextRequest) {
12:36:58.501  [2m12[0m |   const authHeader = request.headers.get("authorization")
12:36:58.501  [2m13[0m |   if (!authHeader) return null
12:36:58.501  [2m14[0m | 
12:36:58.501  [2m15[0m |   return {
12:36:58.502  [2m16[0m |     id: "user-123",
12:36:58.502  [2m17[0m |     email: "user@example.com",
12:36:58.502  [2m18[0m |     username: "testuser",
12:36:58.502  [2m19[0m |   }
12:36:58.502  [2m20[0m | }
12:36:58.502  [2m21[0m | 
12:36:58.502  [2m22[0m | export async function GET(request: NextRequest) {
12:36:58.502     : [33;1m                      ^|^[0m
12:36:58.502     :                        [33;1m`-- [33;1m`GET` redefined here[0m[0m
12:36:58.502  [2m23[0m |   try {
12:36:58.502  [2m24[0m |     const user = verifyUser(request)
12:36:58.502  [2m25[0m |     if (!user) {
12:36:58.502     `----
12:36:58.502 
12:36:58.502 Import trace for requested module:
12:36:58.503 ./app/api/coins/balance/route.ts
12:36:58.505 
12:36:58.505 ./app/api/tickets/purchase/route.ts
12:36:58.506 Error: 
12:36:58.506   [31mx[0m the name `dynamic` is defined multiple times
12:36:58.506      ,-[[36;1;4m/vercel/path0/app/api/tickets/purchase/route.ts[0m:2:1]
12:36:58.506  [2m  2[0m | import { createClient } from "@/lib/supabase/server"
12:36:58.506  [2m  3[0m | import crypto from "crypto"
12:36:58.506  [2m  4[0m | 
12:36:58.506  [2m  5[0m | export const dynamic = "force-dynamic"
12:36:58.506      : [31;1m             ^^^|^^^[0m
12:36:58.507      :                 [31;1m`-- [31;1mprevious definition of `dynamic` here[0m[0m
12:36:58.507  [2m  6[0m | 
12:36:58.507  [2m  7[0m | // Check if we're in preview/development mode
12:36:58.507  [2m  8[0m | const isPreviewMode = () => {
12:36:58.507  [2m  9[0m |   return (
12:36:58.507  [2m 10[0m |     process.env.NODE_ENV === "development" ||
12:36:58.507  [2m 11[0m |     process.env.VERCEL_ENV === "preview" ||
12:36:58.507  [2m 12[0m |     !process.env.PAYSTACK_SECRET_KEY ||
12:36:58.507  [2m 13[0m |     process.env.PAYSTACK_SECRET_KEY.startsWith("pk_test_")
12:36:58.507  [2m 14[0m |   )
12:36:58.507  [2m 15[0m | }
12:36:58.507  [2m 16[0m | 
12:36:58.507  [2m 17[0m | async function verifyUser(request: NextRequest) {
12:36:58.507  [2m 18[0m |   try {
12:36:58.507  [2m 19[0m |     const supabase = await createClient()
12:36:58.507  [2m 20[0m |     const {
12:36:58.508  [2m 21[0m |       data: { user },
12:36:58.508  [2m 22[0m |       error: authError,
12:36:58.508  [2m 23[0m |     } = await supabase.auth.getUser()
12:36:58.508  [2m 24[0m | 
12:36:58.508  [2m 25[0m |     if (authError || !user) {
12:36:58.508  [2m 26[0m |       return { error: "Authentication required", user: null, profile: null }
12:36:58.508  [2m 27[0m |     }
12:36:58.508  [2m 28[0m | 
12:36:58.508  [2m 29[0m |     const { data: profile, error: profileError } = await supabase
12:36:58.508  [2m 30[0m |       .from("profiles")
12:36:58.508  [2m 31[0m |       .select("*")
12:36:58.508  [2m 32[0m |       .eq("id", user.id)
12:36:58.508  [2m 33[0m |       .single()
12:36:58.508  [2m 34[0m | 
12:36:58.508  [2m 35[0m |     if (profileError || !profile) {
12:36:58.508  [2m 36[0m |       return { error: "User profile not found", user: null, profile: null }
12:36:58.508  [2m 37[0m |     }
12:36:58.508  [2m 38[0m | 
12:36:58.508  [2m 39[0m |     return { user, profile, error: null }
12:36:58.508  [2m 40[0m |   } catch (error) {
12:36:58.508  [2m 41[0m |     console.error("Authentication error:", error)
12:36:58.508  [2m 42[0m |     return { error: "Authentication failed", user: null, profile: null }
12:36:58.509  [2m 43[0m |   }
12:36:58.509  [2m 44[0m | }
12:36:58.509  [2m 45[0m | 
12:36:58.509  [2m 46[0m | function generateTicketData(eventId: string, userId: string) {
12:36:58.509  [2m 47[0m |   const timestamp = Date.now()
12:36:58.509  [2m 48[0m |   const random = crypto.randomBytes(4).toString("hex").toUpperCase()
12:36:58.509  [2m 49[0m | 
12:36:58.509  [2m 50[0m |   const ticketNumber = `ELT-${timestamp.toString().slice(-8)}-${random}`
12:36:58.509  [2m 51[0m | 
12:36:58.509  [2m 52[0m |   // Create a more secure QR code with multiple verification layers
12:36:58.509  [2m 53[0m |   const qrData = {
12:36:58.509  [2m 54[0m |     event: eventId,
12:36:58.509  [2m 55[0m |     user: userId.slice(0, 8),
12:36:58.512  [2m 56[0m |     timestamp,
12:36:58.512  [2m 57[0m |     ticket: ticketNumber,
12:36:58.512  [2m 58[0m |   }
12:36:58.512  [2m 59[0m | 
12:36:58.512  [2m 60[0m |   const qrString = JSON.stringify(qrData)
12:36:58.512  [2m 61[0m |   const qrCode = Buffer.from(qrString).toString("base64")
12:36:58.513  [2m 62[0m | 
12:36:58.513  [2m 63[0m |   // Generate secure verification token
12:36:58.513  [2m 64[0m |   const qrToken = crypto
12:36:58.513  [2m 65[0m |     .createHmac("sha256", process.env.NEXTAUTH_SECRET || "erigga-live-secret-2025")
12:36:58.513  [2m 66[0m |     .update(`${eventId}${userId}${timestamp}${ticketNumber}`)
12:36:58.513  [2m 67[0m |     .digest("hex")
12:36:58.513  [2m 68[0m | 
12:36:58.513  [2m 69[0m |   return { ticketNumber, qrCode, qrToken, qrData }
12:36:58.513  [2m 70[0m | }
12:36:58.513  [2m 71[0m | 
12:36:58.513  [2m 72[0m | // Mock Paystack verification for preview mode
12:36:58.513  [2m 73[0m | async function mockPaystackVerification(reference: string, expectedAmount: number) {
12:36:58.513  [2m 74[0m |   await new Promise((resolve) => setTimeout(resolve, 1000))
12:36:58.513  [2m 75[0m |   return {
12:36:58.513  [2m 76[0m |     status: true,
12:36:58.513  [2m 77[0m |     data: {
12:36:58.513  [2m 78[0m |       status: "success",
12:36:58.514  [2m 79[0m |       amount: expectedAmount,
12:36:58.514  [2m 80[0m |       reference,
12:36:58.514  [2m 81[0m |       paid_at: new Date().toISOString(),
12:36:58.514  [2m 82[0m |       channel: "card",
12:36:58.514  [2m 83[0m |       currency: "NGN",
12:36:58.514  [2m 84[0m |       customer: { email: "user@example.com" },
12:36:58.514  [2m 85[0m |     },
12:36:58.514  [2m 86[0m |   }
12:36:58.514  [2m 87[0m | }
12:36:58.514  [2m 88[0m | 
12:36:58.514  [2m 89[0m | // Real Paystack verification
12:36:58.514  [2m 90[0m | async function verifyWithPaystack(reference: string, paystackSecretKey: string) {
12:36:58.514  [2m 91[0m |   const response = await fetch(`https://api.paystack.co/transaction/verify/${reference}`, {
12:36:58.514  [2m 92[0m |     headers: {
12:36:58.514  [2m 93[0m |       Authorization: `Bearer ${paystackSecretKey}`,
12:36:58.514  [2m 94[0m |       "Content-Type": "application/json",
12:36:58.514  [2m 95[0m |     },
12:36:58.514  [2m 96[0m |   })
12:36:58.522  [2m 97[0m | 
12:36:58.522  [2m 98[0m |   if (!response.ok) {
12:36:58.522  [2m 99[0m |     throw new Error(`Paystack API error: ${response.status}`)
12:36:58.522  [2m100[0m |   }
12:36:58.522  [2m101[0m | 
12:36:58.522  [2m102[0m |   return await response.json()
12:36:58.522  [2m103[0m | }
12:36:58.522  [2m104[0m | 
12:36:58.522  [2m105[0m | export async function POST(request: NextRequest) {
12:36:58.522  [2m106[0m |   try {
12:36:58.523  [2m107[0m |     const { user, profile, error: authError } = await verifyUser(request)
12:36:58.523  [2m108[0m |     if (authError || !user || !profile) {
12:36:58.524  [2m109[0m |       return NextResponse.json({ success: false, error: authError || "Unauthorized" }, { status: 401 })
12:36:58.524  [2m110[0m |     }
12:36:58.524  [2m111[0m | 
12:36:58.524  [2m112[0m |     const requestData = await request.json()
12:36:58.524  [2m113[0m |     const { eventId, ticketType = "general", quantity = 1, paymentMethod, paymentReference } = requestData
12:36:58.524  [2m114[0m | 
12:36:58.524  [2m115[0m |     if (!eventId || !paymentMethod) {
12:36:58.524  [2m116[0m |       return NextResponse.json({ success: false, error: "Missing required fields" }, { status: 400 })
12:36:58.524  [2m117[0m |     }
12:36:58.524  [2m118[0m | 
12:36:58.524  [2m119[0m |     const supabase = await createClient()
12:36:58.524  [2m120[0m | 
12:36:58.525  [2m121[0m |     // Get event details - for now use hardcoded values for the intimate session
12:36:58.525  [2m122[0m |     const eventData = {
12:36:58.525  [2m123[0m |       id: eventId,
12:36:58.525  [2m124[0m |       title: "ERIGGA Live - Intimate Session",
12:36:58.525  [2m125[0m |       event_date: "2025-09-03T20:00:00",
12:36:58.525  [2m126[0m |       venue: "Uncle Jaffi at The Playground",
12:36:58.525  [2m127[0m |       city: "Warri, Nigeria",
12:36:58.525  [2m128[0m |       max_capacity: 200,
12:36:58.525  [2m129[0m |       current_attendance: 45,
12:36:58.525  [2m130[0m |       ticket_price_naira: 20000, // Updated to correct price
12:36:58.525  [2m131[0m |       ticket_price_coins: 10000, // Updated to correct coin price
12:36:58.525  [2m132[0m |       status: "upcoming",
12:36:58.525  [2m133[0m |     }
12:36:58.525  [2m134[0m | 
12:36:58.525  [2m135[0m |     // Check event capacity
12:36:58.525  [2m136[0m |     if (eventData.current_attendance + quantity > eventData.max_capacity) {
12:36:58.525  [2m137[0m |       return NextResponse.json({ success: false, error: "Event is sold out" }, { status: 400 })
12:36:58.525  [2m138[0m |     }
12:36:58.526  [2m139[0m | 
12:36:58.526  [2m140[0m |     // Calculate price
12:36:58.526  [2m141[0m |     const ticketPrice = eventData.ticket_price_naira
12:36:58.526  [2m142[0m |     const coinPrice = eventData.ticket_price_coins
12:36:58.526  [2m143[0m |     const totalPrice = ticketPrice * quantity
12:36:58.526  [2m144[0m |     const totalCoins = coinPrice * quantity
12:36:58.526  [2m145[0m | 
12:36:58.526  [2m146[0m |     // Process payment based on method
12:36:58.526  [2m147[0m |     if (paymentMethod === "paystack") {
12:36:58.526  [2m148[0m |       if (!paymentReference) {
12:36:58.526  [2m149[0m |         return NextResponse.json({ success: false, error: "Payment reference required for Paystack" }, { status: 400 })
12:36:58.526  [2m150[0m |       }
12:36:58.526  [2m151[0m | 
12:36:58.526  [2m152[0m |       // Verify payment with Paystack
12:36:58.526  [2m153[0m |       let paystackData
12:36:58.527  [2m154[0m |       try {
12:36:58.527  [2m155[0m |         if (isPreviewMode()) {
12:36:58.527  [2m156[0m |           paystackData = await mockPaystackVerification(paymentReference, totalPrice * 100) // Convert to kobo
12:36:58.527  [2m157[0m |         } else {
12:36:58.527  [2m158[0m |           const paystackSecretKey = process.env.PAYSTACK_SECRET_KEY
12:36:58.527  [2m159[0m |           if (!paystackSecretKey) {
12:36:58.527  [2m160[0m |             return NextResponse.json({ success: false, error: "Payment gateway not configured" }, { status: 500 })
12:36:58.527  [2m161[0m |           }
12:36:58.527  [2m162[0m |           paystackData = await verifyWithPaystack(paymentReference, paystackSecretKey)
12:36:58.527  [2m163[0m |         }
12:36:58.527  [2m164[0m | 
12:36:58.527  [2m165[0m |         if (!paystackData.status || paystackData.data.status !== "success") {
12:36:58.527  [2m166[0m |           return NextResponse.json({ success: false, error: "Payment verification failed" }, { status: 400 })
12:36:58.527  [2m167[0m |         }
12:36:58.527  [2m168[0m | 
12:36:58.527  [2m169[0m |         // Verify amount (Paystack returns amount in kobo)
12:36:58.527  [2m170[0m |         const expectedAmountKobo = totalPrice * 100
12:36:58.527  [2m171[0m |         if (Math.abs(paystackData.data.amount - expectedAmountKobo) > 100) {
12:36:58.527  [2m172[0m |           return NextResponse.json({ success: false, error: "Payment amount mismatch" }, { status: 400 })
12:36:58.527  [2m173[0m |         }
12:36:58.527  [2m174[0m |       } catch (error) {
12:36:58.528  [2m175[0m |         console.error("Payment verification error:", error)
12:36:58.528  [2m176[0m |         return NextResponse.json({ success: false, error: "Payment verification failed" }, { status: 500 })
12:36:58.528  [2m177[0m |       }
12:36:58.528  [2m178[0m |     } else if (paymentMethod === "coins") {
12:36:58.528  [2m179[0m |       if (profile.coins_balance < totalCoins) {
12:36:58.528  [2m180[0m |         return NextResponse.json({ success: false, error: "Insufficient coins balance" }, { status: 400 })
12:36:58.528  [2m181[0m |       }
12:36:58.528  [2m182[0m | 
12:36:58.528  [2m183[0m |       // Deduct coins
12:36:58.528  [2m184[0m |       const { error: coinsError } = await supabase
12:36:58.528  [2m185[0m |         .from("profiles")
12:36:58.531  [2m186[0m |         .update({
12:36:58.531  [2m187[0m |           coins_balance: profile.coins_balance - totalCoins,
12:36:58.531  [2m188[0m |           updated_at: new Date().toISOString(),
12:36:58.532  [2m189[0m |         })
12:36:58.532  [2m190[0m |         .eq("id", user.id)
12:36:58.532  [2m191[0m | 
12:36:58.532  [2m192[0m |       if (coinsError) {
12:36:58.532  [2m193[0m |         console.error("Coins deduction error:", coinsError) // Added error logging
12:36:58.532  [2m194[0m |         return NextResponse.json({ success: false, error: "Failed to deduct coins" }, { status: 500 })
12:36:58.532  [2m195[0m |       }
12:36:58.532  [2m196[0m |     }
12:36:58.532  [2m197[0m | 
12:36:58.532  [2m198[0m |     // Create tickets with enhanced QR codes
12:36:58.532  [2m199[0m |     const tickets = []
12:36:58.532  [2m200[0m |     for (let i = 0; i < quantity; i++) {
12:36:58.532  [2m201[0m |       const { ticketNumber, qrCode, qrToken, qrData } = generateTicketData(eventId, user.id)
12:36:58.532  [2m202[0m | 
12:36:58.532  [2m203[0m |       const { data: ticket, error: ticketError } = await supabase
12:36:58.533  [2m204[0m |         .from("tickets")
12:36:58.533  [2m205[0m |         .insert({
12:36:58.533  [2m206[0m |           event_id: eventId,
12:36:58.533  [2m207[0m |           user_id: user.id,
12:36:58.533  [2m208[0m |           ticket_type: ticketType,
12:36:58.533  [2m209[0m |           ticket_number: ticketNumber,
12:36:58.533  [2m210[0m |           qr_code: qrCode,
12:36:58.533  [2m211[0m |           qr_token: qrToken,
12:36:58.533  [2m212[0m |           price_paid_naira: paymentMethod === "paystack" ? ticketPrice : null,
12:36:58.533  [2m213[0m |           price_paid_coins: paymentMethod === "coins" ? coinPrice : null,
12:36:58.533  [2m214[0m |           payment_method: paymentMethod,
12:36:58.533  [2m215[0m |           payment_reference: paymentReference,
12:36:58.533  [2m216[0m |           status: "valid",
12:36:58.533  [2m217[0m |           metadata: {
12:36:58.534  [2m218[0m |             qr_data: qrData,
12:36:58.534  [2m219[0m |             event_title: eventData.title,
12:36:58.534  [2m220[0m |             venue: eventData.venue,
12:36:58.534  [2m221[0m |             event_date: eventData.event_date,
12:36:58.534  [2m222[0m |             generated_at: new Date().toISOString(),
12:36:58.534  [2m223[0m |           },
12:36:58.534  [2m224[0m |         })
12:36:58.534  [2m225[0m |         .select()
12:36:58.534  [2m226[0m |         .single()
12:36:58.534  [2m227[0m | 
12:36:58.535  [2m228[0m |       if (ticketError) {
12:36:58.535  [2m229[0m |         console.error("Ticket creation error:", ticketError)
12:36:58.536  [2m230[0m |         return NextResponse.json({ success: false, error: "Failed to create ticket" }, { status: 500 })
12:36:58.536  [2m231[0m |       }
12:36:58.536  [2m232[0m | 
12:36:58.536  [2m233[0m |       tickets.push(ticket)
12:36:58.536  [2m234[0m |     }
12:36:58.536  [2m235[0m | 
12:36:58.536  [2m236[0m |     // Create transaction record
12:36:58.536  [2m237[0m |     await supabase.from("transactions").insert({
12:36:58.536  [2m238[0m |       user_id: user.id,
12:36:58.536  [2m239[0m |       type: "purchase",
12:36:58.536  [2m240[0m |       category: "ticket",
12:36:58.536  [2m241[0m |       amount_naira: paymentMethod === "paystack" ? totalPrice : null,
12:36:58.536  [2m242[0m |       amount_coins: paymentMethod === "coins" ? totalCoins : null,
12:36:58.536  [2m243[0m |       payment_method: paymentMethod,
12:36:58.536  [2m244[0m |       paystack_reference: paymentReference,
12:36:58.536  [2m245[0m |       status: "completed",
12:36:58.536  [2m246[0m |       description: `Purchased ${quantity} ${ticketType} ticket(s) for ${eventData.title}`,
12:36:58.536  [2m247[0m |       reference_id: eventId,
12:36:58.536  [2m248[0m |       reference_type: "event",
12:36:58.536  [2m249[0m |       metadata: {
12:36:58.536  [2m250[0m |         ticket_ids: tickets.map((t) => t.id),
12:36:58.536  [2m251[0m |         event_title: eventData.title,
12:36:58.536  [2m252[0m |         ticket_type: ticketType,
12:36:58.536  [2m253[0m |         quantity: quantity,
12:36:58.536  [2m254[0m |       },
12:36:58.536  [2m255[0m |     })
12:36:58.536  [2m256[0m | 
12:36:58.536  [2m257[0m |     return NextResponse.json({
12:36:58.536  [2m258[0m |       success: true,
12:36:58.537  [2m259[0m |       tickets: tickets.map((ticket) => ({
12:36:58.537  [2m260[0m |         id: ticket.id,
12:36:58.537  [2m261[0m |         ticket_number: ticket.ticket_number,
12:36:58.537  [2m262[0m |         qr_code: ticket.qr_code,
12:36:58.537  [2m263[0m |         event_title: eventData.title,
12:36:58.537  [2m264[0m |         event_date: eventData.event_date,
12:36:58.537  [2m265[0m |         ticket_type: ticket.ticket_type,
12:36:58.537  [2m266[0m |         venue: eventData.venue,
12:36:58.537  [2m267[0m |         status: ticket.status,
12:36:58.537  [2m268[0m |       })),
12:36:58.537  [2m269[0m |       message: `Successfully purchased ${quantity} ticket(s)`,
12:36:58.537  [2m270[0m |       totalPaid: paymentMethod === "paystack" ? totalPrice : totalCoins,
12:36:58.537  [2m271[0m |       paymentMethod,
12:36:58.537  [2m272[0m |     })
12:36:58.537  [2m273[0m |   } catch (error) {
12:36:58.537  [2m274[0m |     console.error("Ticket purchase error:", error)
12:36:58.537  [2m275[0m |     return NextResponse.json({ success: false, error: "Internal server error" }, { status: 500 })
12:36:58.537  [2m276[0m |   }
12:36:58.537  [2m277[0m | }
12:36:58.537  [2m278[0m | 
12:36:58.537  [2m279[0m | export const dynamic = "force-dynamic"
12:36:58.537      : [33;1m             ^^^|^^^[0m
12:36:58.537      :                 [33;1m`-- [33;1m`dynamic` redefined here[0m[0m
12:36:58.537  [2m280[0m | export const revalidate = 0
12:36:58.537  [2m281[0m | 
12:36:58.537  [2m282[0m | export async function GET() {
12:36:58.537      `----
12:36:58.537 
12:36:58.537 Import trace for requested module:
12:36:58.537 ./app/api/tickets/purchase/route.ts
12:36:58.537 
12:36:58.554 
12:36:58.554 > Build failed because of webpack errors
12:36:58.669 â€‰ELIFECYCLEâ€‰ Command failed with exit code 1.
12:36:58.706 Error: Command "pnpm run build" exited with 1