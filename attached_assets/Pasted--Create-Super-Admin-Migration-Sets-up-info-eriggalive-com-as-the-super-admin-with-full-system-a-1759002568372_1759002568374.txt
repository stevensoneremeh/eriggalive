-- Create Super Admin Migration
-- Sets up info@eriggalive.com as the super admin with full system access

-- First, ensure we have the proper user roles
DO $$ 
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_role') THEN
    CREATE TYPE user_role AS ENUM ('super_admin', 'admin', 'moderator', 'user');
  ELSE
    -- Add super_admin to existing enum if it doesn't exist
    BEGIN
      ALTER TYPE user_role ADD VALUE 'super_admin';
    EXCEPTION
      WHEN duplicate_object THEN NULL;
    END;
  END IF;
END $$;

-- Create or update the super admin user profile
INSERT INTO auth.users (
  id,
  instance_id,
  email,
  encrypted_password,
  email_confirmed_at,
  created_at,
  updated_at,
  raw_app_meta_data,
  raw_user_meta_data,
  is_super_admin,
  role
) VALUES (
  '11111111-1111-1111-1111-111111111111',
  '00000000-0000-0000-0000-000000000000',
  'info@eriggalive.com',
  crypt('SuperAdmin@Erigga2024!', gen_salt('bf')),
  NOW(),
  NOW(),
  NOW(),
  '{"provider": "email", "providers": ["email"], "role": "super_admin"}',
  '{"username": "super_admin", "role": "super_admin"}',
  true,
  'authenticated'
) ON CONFLICT (id) DO UPDATE SET
  raw_app_meta_data = EXCLUDED.raw_app_meta_data,
  raw_user_meta_data = EXCLUDED.raw_user_meta_data,
  is_super_admin = true,
  updated_at = NOW();

-- Ensure users table has role column with proper type
ALTER TABLE public.users 
ADD COLUMN IF NOT EXISTS role user_role DEFAULT 'user',
ADD COLUMN IF NOT EXISTS is_super_admin BOOLEAN DEFAULT FALSE;

-- First, try to update existing user by email
UPDATE public.users SET
  auth_user_id = '11111111-1111-1111-1111-111111111111',
  username = 'super_admin',
  role = 'super_admin',
  is_super_admin = true,
  tier = 'blood_brotherhood',
  coins_balance = 999999,
  points = 999999,
  level = 99,
  is_verified = true,
  updated_at = NOW()
WHERE email = 'info@eriggalive.com';

-- If no rows were updated (user doesn't exist), insert new user
INSERT INTO public.users (
  auth_user_id,
  username,
  email,
  full_name,
  tier,
  role,
  is_super_admin,
  coins_balance,
  total_spent,
  points,
  level,
  is_verified,
  created_at,
  updated_at
)
SELECT 
  '11111111-1111-1111-1111-111111111111',
  'super_admin',
  'info@eriggalive.com',
  'Erigga Live Super Admin',
  'blood_brotherhood',
  'super_admin',
  true,
  999999,
  0,
  999999,
  99,
  true,
  NOW(),
  NOW()
WHERE NOT EXISTS (
  SELECT 1 FROM public.users WHERE email = 'info@eriggalive.com'
);